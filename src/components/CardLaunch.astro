---
interface Props {
  id: string;
  name: string;
  img: string;
  success: boolean;
  flightNumber: number;
  details: string;
}

const { id, name, img, success, flightNumber, details } = Astro.props;
const launchStatus = success ? "Success" : "Failure";
---

<a
  href={`/launch/${id}`}
  class="rounded-lg border shadow-md bg-gray-800 border-gray-700 hover:scale-105 hover:bg-gary-700 hover:border-gary-500 transition flex flex-col"
>
  <picture class="flex justify-center p-4">
    <img src={img} alt={`Path for launch ${id}`} class="mb-5 rounded-lg" />
  </picture>
  <header class="p-4 flex-grow">
    <small
      class:list={[
        "text-xs font-semibold mr-2 px-2.5 py-0.5 rounded",
        {
          "bg-green-500 text-gray-800": success,
          "bg-red-500 text-gray-200": !success,
        },
      ]}
    >
      {launchStatus}
    </small>

    <h2
      class="my-2 text-2xl font-semibold text-gray-200 hover:text-gray-100 transition"
    >
      Flight #{flightNumber} - {name}
    </h2>

    <p class="mb-4 font-light text-gray-400">
      {
        details !== null && details?.length > 100
          ? `${details.slice(0, 100)}...`
          : details
      }
    </p>
  </header>
</a>

<!-- <div class="max-w-sm rounded overflow-hidden shadow-lg p-4" id={id}>
  <img class="w-full" src={img} alt={name} />
  <div class="px-6 py-4">
    <div class="font-bold text-xl mb-2">{name}</div>
    <p class="text-gray-700 text-base">
      Flight Number: {flightNumber}
    </p>
    <p class="text-gray-700 text-base">
      {details}
    </p>
  </div>
  <div class={`px-6 pt-4 pb-2 ${success ? "text-green-500" : "text-red-500"}`}>
    Status: {success ? "Successful" : "Failed"}
  </div>
</div> -->
